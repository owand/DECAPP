<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:resources="clr-namespace:DECAPP.Resources"
             xmlns:local="clr-namespace:DECAPP;assembly=DECAPP"
             x:Class="DECAPP.Views.Equipment.DriveTypePage"
             Title="{x:Static resources:AppResource.TitleDriveType}"
             x:Name="driveTypePage">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="Style" Value="{DynamicResource labelStyle}" />
            </Style>
            <Style TargetType="Editor">
                <Setter Property="Style" Value="{DynamicResource editorStyle}" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Style" Value="{StaticResource buttonStyle}" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" >
        <StackLayout Spacing="0" BackgroundColor="{AppThemeBinding Dark={StaticResource Background_Dark}, Light={StaticResource Background_Light}}" AbsoluteLayout.LayoutFlags="All" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" >
            <!-- Header - CommandBar -->
            <Grid BackgroundColor="#515C6B" ColumnSpacing="0" RowSpacing="0" HeightRequest="48" MinimumHeightRequest="48" ColumnDefinitions="*, *">
                <!-- SearchBar -->
                <SearchBar x:Name="SearchBar" Grid.Column="0" Placeholder="{x:Static resources:AppResource.SearchBar}" Style="{StaticResource searchBarStyle}" TextChanged="OnFilter" >
                    <SearchBar.Triggers>
                        <DataTrigger TargetType="SearchBar" Binding="{Binding Source={x:Reference Master}, Path=IsVisible}" Value="False">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="SearchBar" Binding="{Binding Source={x:Reference Name=SaveCommandBar}, Path=IsVisible}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </SearchBar.Triggers>
                </SearchBar>
                <!-- EditCommandBar -->
                <StackLayout Grid.Column="1" Orientation="Horizontal" HorizontalOptions="End" Spacing="0" IsVisible="{Binding Source={x:Static local:App.ProState}}">
                    <StackLayout Orientation="Horizontal" HorizontalOptions="End" Spacing="0" >
                        <StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding Source={x:Reference Name=SaveCommandBar}, Path=IsVisible}" Value="True">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <Button x:Name="EditButton" Text="{StaticResource EditIcon}" Released="OnEdit" />
                        <Button x:Name="AddButton" Text="{StaticResource AddIcon}" Released="OnAdd" />
                        <Button x:Name="DeleteButton" Text="{StaticResource DeleteIcon}" Released="OnDelete" />
                    </StackLayout>
                    <!-- SaveCommandBar -->
                    <StackLayout Grid.Column="1" x:Name="SaveCommandBar" Orientation="Horizontal" HorizontalOptions="End" IsVisible="False" Spacing="0">
                        <Button Text="{StaticResource SaveIcon}" Released="OnSave" >
                            <Button.Triggers>
                                <MultiTrigger TargetType="Button">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding Source={x:Reference editNAME}, Path=Text.Length}" Value="0" />
                                        <BindingCondition Binding="{Binding Source={x:Reference editSYMBOL}, Path=Text.Length}" Value="0" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Text="{StaticResource CancelIcon}" Released="OnCancel" />
                    </StackLayout>
                </StackLayout>
            </Grid>

            <!-- Body -->
            <Grid x:Name="Body" VerticalOptions="FillAndExpand" ColumnSpacing="0" RowSpacing="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="{x:OnIdiom 0, Tablet=*, Desktop=*}" />
                </Grid.ColumnDefinitions>

                <!-- Navigation items-->
                <StackLayout x:Name="Master" Grid.Column="0" BackgroundColor="#1F252C" VerticalOptions="FillAndExpand" Spacing="0" >
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding Source={x:Reference Name=SaveCommandBar}, Path=IsVisible}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </StackLayout.Triggers>
                    <!-- Master ListView -->
                    <ListView x:Name="MasterContent" HasUnevenRows="True" ItemsSource="{Binding Collection}" BackgroundColor="Transparent"
                              ItemTapped="OnTapped" ItemSelected="OnSelection" SeparatorVisibility="None" SelectedItem="{Binding SelectItem, Mode=TwoWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                    <ViewCell>
                                    <Grid Margin="8,0,8,0" VerticalOptions="FillAndExpand" ColumnSpacing="0" RowSpacing="0" ColumnDefinitions="40, *" RowDefinitions="*, auto">
                                            <Label x:Name="SymbolList" Grid.Column="0" Grid.Row="0" Text="{Binding SYMBOL}" LineBreakMode="TailTruncation"
                                                   FontAttributes="Bold" Margin="0,8,8,0" TextColor="White" WidthRequest="40" />
                                            <Label Grid.Column="1" Grid.Row="0" Text="{Binding TYPENAME}" LineBreakMode="TailTruncation"
                                                   FontAttributes="Bold" Margin="8,8,0,0" TextColor="White" HorizontalOptions="StartAndExpand" />
                                            <Label Grid.Column="1" Grid.Row="1" MaxLines="2" Text="{Binding DESCRIPTION}" LineBreakMode="TailTruncation"
                                                   Margin="8,0,0,8" TextColor="#515C6B" FontSize="12" />
                                        </Grid>
                                    </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackLayout>

                <!-- Detail -->
                <ScrollView x:Name="Detail" Grid.Column="1" >
                    <StackLayout Margin="20,12,8,12" Spacing="0" CascadeInputTransparent="True" InputTransparent="True" >
                        <StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding Source={x:Reference Name=SaveCommandBar}, Path=IsVisible}" Value="True">
                                <Setter Property="InputTransparent" Value="False" />
                            </DataTrigger>
                        </StackLayout.Triggers>

                        <!-- Picker для корректной работы InputTransparent -->
                        <Picker HeightRequest="0" WidthRequest="0" Margin="0,0,0,0" />

                        <!-- Symbol & Name -->
                        <Grid VerticalOptions="Start" ColumnSpacing="0" RowSpacing="0" ColumnDefinitions="1*, 2*">
                            <!-- Symbol -->
                            <StackLayout Grid.Column="0" Margin="0,0,8,0" Spacing="0">
                                <Label Text="{x:Static resources:AppResource.Abbreviation}" TextColor="#515C6B" />
                                <Editor x:Name="editSYMBOL" Placeholder="{x:Static resources:AppResource.HeaderAbbreviation}" Text="{Binding SelectItem.SYMBOL}" />
                            </StackLayout>
                            <!-- Name -->
                            <StackLayout Grid.Column="1" Margin="12,0,0,0" Spacing="0">
                                <Label Text="{x:Static resources:AppResource.Name}" TextColor="#515C6B" />
                                <Editor x:Name="editNAME" Placeholder="{x:Static resources:AppResource.HeaderName}" Text="{Binding SelectItem.TYPENAME}" />
                            </StackLayout>
                        </Grid>

                        <!-- Description -->
                        <StackLayout Margin="0,20,0,0" VerticalOptions="Start" Spacing="0">
                            <Label Text="{x:Static resources:AppResource.Description}" TextColor="#515C6B" />
                            <Editor Placeholder="{x:Static resources:AppResource.HeaderDescription}" Text="{Binding SelectItem.DESCRIPTION}" VerticalOptions="FillAndExpand" />
                        </StackLayout>

                        <!-- Note -->
                        <StackLayout Margin="0,20,0,0" VerticalOptions="FillAndExpand" Spacing="0">
                            <Label Text="{x:Static resources:AppResource.Note}" TextColor="#515C6B" />
                            <Editor Placeholder="{x:Static resources:AppResource.HeaderNote}" Text="{Binding SelectItem.NOTE}" VerticalOptions="FillAndExpand" />
                        </StackLayout>
                    </StackLayout>
                </ScrollView>
            </Grid>
        </StackLayout>

        <StackLayout Padding="12" AbsoluteLayout.LayoutFlags="PositionProportional" AbsoluteLayout.LayoutBounds="0.5,0.5,-1,-1">
            <ActivityIndicator x:Name="indicator" IsVisible="{Binding Source={x:Reference driveTypePage}, Path=IsBusy}"
                               IsRunning="{Binding Source={x:Reference driveTypePage}, Path=IsBusy}" Color="DarkOrange" HeightRequest="48" WidthRequest="48" BackgroundColor="Transparent" />
        </StackLayout>
    </AbsoluteLayout>
</ContentPage>